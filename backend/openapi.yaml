openapi: 3.0.0
info:
  title: CollabSync API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserInput"
      responses:
        "200":
          description: Successful registration with a token
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  auth_token:
                    type: string
  /auth/login:
    post:
      summary: Login a user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: Successful login with a token
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  auth_token:
                    type: string
  /users:
    get:
      summary: Search users
      operationId: searchUsers
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - name
              - created_at
        - in: query
          name: sort_order
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/{user_id}:
    get:
      summary: Get user by ID
      operationId: getUserById
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: Update a user
      operationId: updateUserById
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserInput"
      responses:
        "200":
          description: Updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /workspaces:
    post:
      summary: Create a new workspace
      operationId: createWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceInput"
      responses:
        "200":
          description: Successful workspace creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
    get:
      summary: Search workspaces
      operationId: searchWorkspaces
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - name
        - in: query
          name: sort_order
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: List of workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Workspace"
  /workspaces/{workspace_id}:
    get:
      summary: Get workspace by ID
      operationId: getWorkspaceById
      parameters:
        - in: path
          name: workspace_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workspace details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
    patch:
      summary: Update a workspace
      operationId: updateWorkspaceById
      parameters:
        - in: path
          name: workspace_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceInput"
      responses:
        "200":
          description: Updated workspace
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
  /workspaces/{workspace_id}/members:
    post:
      summary: Add a member to a workspace
      operationId: addWorkspaceMember
      parameters:
        - in: path
          name: workspace_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceMemberInput"
      responses:
        "200":
          description: Added workspace member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceMember"
    get:
      summary: Get workspace members
      operationId: getWorkspaceMembers
      parameters:
        - in: path
          name: workspace_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List of workspace members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkspaceMember"
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        created_at:
          type: string
          format: date-time
        password_hash:
          type: string
        role:
          type: string
    CreateUserInput:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        password_hash:
          type: string
        role:
          type: string
    UpdateUserInput:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        password_hash:
          type: string
        role:
          type: string
    Workspace:
      type: object
      properties:
        workspace_id:
          type: string
        owner_user_id:
          type: string
        name:
          type: string
        settings:
          type: object
    CreateWorkspaceInput:
      type: object
      properties:
        owner_user_id:
          type: string
        name:
          type: string
        settings:
          type: object
    UpdateWorkspaceInput:
      type: object
      properties:
        workspace_id:
          type: string
        owner_user_id:
          type: string
        name:
          type: string
        settings:
          type: object
    WorkspaceMember:
      type: object
      properties:
        workspace_id:
          type: string
        user_id:
          type: string
        role:
          type: string
    CreateWorkspaceMemberInput:
      type: object
      properties:
        workspace_id:
          type: string
        user_id:
          type: string
        role:
          type: string
